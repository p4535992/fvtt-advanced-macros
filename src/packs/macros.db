{"_id":"3t22b7DeBqd8OKz6","name":"Canvas Always-on-top","permission":{"default":0,"PEJBB2AYKoE5ZuxD":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.tHqyy0sqn6mHlV0m"}},"scope":"global","command":"const video = $(`<video id='pip-video' autoplay='autoplay' onplay='this.requestPictureInPicture()'></video>`)[0];\nvideo.srcObject = $(\"#board\")[0].captureStream();\nconst playVideo = () => {\n   if (video.readyState < 2) setTimeout(playVideo, 0);\n   else video.play();\n};\nplayVideo();","author":"PEJBB2AYKoE5ZuxD","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"4aUMx41pvnZCJ52b","name":"teleport","permission":{"FRJk2q4bH9IdLZDf":3},"type":"script","sort":100001,"flags":{},"scope":"global","command":"// This macro only serves as an example. For a proper teleportation macro, check out the Dynamic Effects module.\n//\n// This macro requires the advanced macros of Furnace\n// This macro depends on /move-token\n// Takes X and Y as arguments\n\nconst macro = game.macros.getName(\"move-token\");\nif (!macro) {\n  ui.notifications.error(\"This macro depends on the 'move-token' macro, which could not be found.\");\n  return;\n}\nmacro.execute(args[0], args[1]);","author":"FRJk2q4bH9IdLZDf","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"63bPkXo7BUsZEQJ0","name":"animate-pan","permission":{"default":0,"PEJBB2AYKoE5ZuxD":3},"type":"script","flags":{},"scope":"global","command":"/* Pan the camera to the X, Y and scale positions.\r\n * See the 'pan-camera' macro for more details.\r\n * The first argument is the duration in milliseconds for the panning animation\r\n * The second argument is X, third argument is Y and fourth argument is the zoom level\r\n * Example: /animate-pan 500 1500 1500 0.5\r\n */\r\n\r\ncanvas.animatePan({duration: args[0], x: args[1], y: args[2], scale: args[3]})","author":"PEJBB2AYKoE5ZuxD","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"CRaAk3V9gF6ihk1P","name":"Measure Token Distances","permission":{"default":0,"PEJBB2AYKoE5ZuxD":3},"type":"script","flags":{"furnace":{"runAsGM":false}},"scope":"global","command":"// This macro will measure the distance between the selected tokens\r\n// and every targetted tokens within a scene.\r\n// It will then output the measured distances to the chat\r\n// If called with an argument, determines who to whisper the message to,\r\n// otherwise sends it as a public message\r\n\r\nlet message = \"\"\r\nfor (let token of canvas.tokens.controlled) {\r\n   let ruler = canvas.controls.ruler;\r\n   for (let target of game.user.targets) {\r\n       ruler.clear()\r\n       ruler.waypoints.push(token.center)\r\n       ruler.labels.addChild(new PIXI.Text(\"\"));\r\n       ruler.measure(target.center);\r\n       let distance = ruler.labels.children[0].text;\r\n       message += `From '${token.name}' to '${target.name}' : ${distance}<br/>`\r\n       ruler.clear();\r\n   }\r\n}\r\nif (message) {\r\n   const whisper = args[0] ? ChatMessage.getWhisperIDs(args[0]) : undefined;\r\n   ChatMessage.create({content: message, whisper});\r\n}","author":"PEJBB2AYKoE5ZuxD","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"PoygoBaDDvbDCluL","name":"current-time","permission":{"default":0,"PEJBB2AYKoE5ZuxD":3},"type":"script","flags":{},"scope":"global","command":"// Returns the current time in format \"HH:MM\" (24 hour format)\r\nconst now = new Date();\r\nreturn `${now.getHours()}:${(now.getMinutes()<10?'0':'') + now.getMinutes()}`;","author":"PEJBB2AYKoE5ZuxD","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"hbpdu5LvSAOAp5PX","name":"Say hello","permission":{"default":0,"PEJBB2AYKoE5ZuxD":3},"type":"chat","flags":{},"scope":"global","command":"Hi {{game.user.name}}, it is now {{macro \"current-time\"}}","author":"PEJBB2AYKoE5ZuxD","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"rKmHs6LsBtDjPDhK","name":"Set Token bars and nameplate","permission":{"bWT4RleWjkaYiYKA":3},"type":"script","sort":100001,"flags":{},"scope":"global","command":"/* This will set every token in scene to always display their\r\n * token bars and nameplate, and sets the first bar to represent \r\n * HP and removes the second token bar.\r\n*/\r\n\r\nconst tokens =canvas.tokens.placeables.map(token => {\r\n   return {\r\n       _id: token.id,\r\n       \"bar1.attribute\": \"attributes.hp\",\r\n       \"bar2.attribute\": \"\",\r\n       \"displayName\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\r\n       \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS\r\n   };\r\n});\r\n\r\ncanvas.scene.updateEmbeddedDocuments('Token', tokens)","author":"bWT4RleWjkaYiYKA","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"rMOgmYRkV0AZ1sjc","name":"move-token","permission":{"FRJk2q4bH9IdLZDf":3},"type":"script","sort":100001,"flags":{},"scope":"global","command":"/* This macro requires the advanced macros of Furnace\n * This will move the selected token to the designated position\n * Takes X and Y as arguments for the position (in pixels)\n * A third, optional, argument, if set to true, will disable the movement animation\n * Example: /move-token 1000 1500 false\n */\n\nif (!token) return;\nconst x = args[0] ?? token.x;\nconst y = args[1] ?? token.y;\nawait token.document.update({x, y})","author":"FRJk2q4bH9IdLZDf","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"wg8eFxpVcgewRvsu","name":"pan-camera","permission":{"FRJk2q4bH9IdLZDf":3},"type":"script","sort":100001,"flags":{},"scope":"global","command":"// Pan the canvas camera to a position X and Y, in pixels.\r\n// Can also set the zoom level using the third optional argument.\r\n// Example: /pan-camera 1500\r\n// Example: /pan-camera 2500 2000 0.3\r\n\r\ncanvas.pan({x: args[0], y: args[1], scale: args[2]})","author":"FRJk2q4bH9IdLZDf","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"yUlSqozYscIEOGz1","name":"play-audio","permission":{"FRJk2q4bH9IdLZDf":3},"type":"script","sort":100001,"flags":{},"scope":"global","command":"/* This macro requires the advanced macros of Furnace\r\n * This will play audio from a URL\r\n * Takes the URL of the audio file as its first argument\r\n * The second argument, if set to true, will play the audio for every other player too.\r\n * Example: /play-audio \"https://example.com/sound-effects/explosion.mp3\" true\r\n */\r\nconst url = args[0];\r\nconst push = args[1];\r\n\r\nAudioHelper.play({src: [url]}, push);","author":"FRJk2q4bH9IdLZDf","img":"icons/svg/dice-target.svg","actorIds":[]}